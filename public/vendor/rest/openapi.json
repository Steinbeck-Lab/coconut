{
    "openapi": "3.1.0",
    "info": {
        "title": "COCONUT",
        "summary": "COlleCtion of Open NatUral producTs",
        "description": "A comprehensive platform facilitating natural product research by providing data, tools, and services for deposition, curation, and reuse.",
        "contact": {
            "name": "COCONUT",
            "url": "https:\/\/coconut.naturalproducts.net\/",
            "email": "info.coconut@uni-jena.de"
        },
        "license": {
            "name": "MIT",
            "identifier": "MIT"
        },
        "version": "2.0.0",
        "termsOfService": "https:\/\/coconut.naturalproducts.net\/terms"
    },
    "paths": {
        "\/api\/molecules": {
            "get": {
                "tags": [
                    "Molecules"
                ],
                "summary": "Get the resource detail",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "actions": [],
                                        "instructions": [],
                                        "scout_instructions": [],
                                        "fields": [
                                            "standard_inchi",
                                            "standard_inchi_key",
                                            "canonical_smiles",
                                            "sugar_free_smiles",
                                            "identifier",
                                            "name",
                                            "cas",
                                            "iupac_name",
                                            "murko_framework",
                                            "structural_comments",
                                            "name_trust_level",
                                            "annotation_level",
                                            "variants_count",
                                            "status",
                                            "active",
                                            "has_variants",
                                            "has_stereo",
                                            "is_tautomer",
                                            "is_parent",
                                            "is_placeholder"
                                        ],
                                        "scout_fields": [],
                                        "limits": [
                                            10,
                                            25,
                                            50
                                        ],
                                        "scopes": [],
                                        "relations": [
                                            {
                                                "resource": "App\\Rest\\Resources\\PropertiesResource",
                                                "relation": "properties",
                                                "constraints": {
                                                    "required_on_creation": false,
                                                    "prohibited_on_creation": false,
                                                    "required_on_update": false,
                                                    "prohibited_on_update": false
                                                },
                                                "name": "HasOne"
                                            }
                                        ],
                                        "rules": {
                                            "all": [],
                                            "create": [],
                                            "update": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Get every detail about the resource according to the current user connected",
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Molecules"
                ],
                "summary": "Perform a destroy request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Delete database records using primary key",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "resources": [
                                    1,
                                    5,
                                    6
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/molecules\/search": {
            "post": {
                "tags": [
                    "Molecules"
                ],
                "summary": "Perform a search request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Crunch the Api's data with multiple attributes",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "scopes": [],
                                    "filters": [
                                        {
                                            "field": "standard_inchi",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "standard_inchi_key",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "canonical_smiles",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "sugar_free_smiles",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "identifier",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "name",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "cas",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "iupac_name",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "murko_framework",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "structural_comments",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "name_trust_level",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "annotation_level",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "variants_count",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "status",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "active",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "has_variants",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "has_stereo",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "is_tautomer",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "is_parent",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "is_placeholder",
                                            "operator": "=",
                                            "value": ""
                                        }
                                    ],
                                    "sorts": [
                                        {
                                            "field": "standard_inchi",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "standard_inchi_key",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "canonical_smiles",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "sugar_free_smiles",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "identifier",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "name",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "cas",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "iupac_name",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "murko_framework",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "structural_comments",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "name_trust_level",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "annotation_level",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "variants_count",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "status",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "active",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "has_variants",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "has_stereo",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "is_tautomer",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "is_parent",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "is_placeholder",
                                            "direction": "desc"
                                        }
                                    ],
                                    "selects": [
                                        {
                                            "field": "standard_inchi"
                                        },
                                        {
                                            "field": "standard_inchi_key"
                                        },
                                        {
                                            "field": "canonical_smiles"
                                        },
                                        {
                                            "field": "sugar_free_smiles"
                                        },
                                        {
                                            "field": "identifier"
                                        },
                                        {
                                            "field": "name"
                                        },
                                        {
                                            "field": "cas"
                                        },
                                        {
                                            "field": "iupac_name"
                                        },
                                        {
                                            "field": "murko_framework"
                                        },
                                        {
                                            "field": "structural_comments"
                                        },
                                        {
                                            "field": "name_trust_level"
                                        },
                                        {
                                            "field": "annotation_level"
                                        },
                                        {
                                            "field": "variants_count"
                                        },
                                        {
                                            "field": "status"
                                        },
                                        {
                                            "field": "active"
                                        },
                                        {
                                            "field": "has_variants"
                                        },
                                        {
                                            "field": "has_stereo"
                                        },
                                        {
                                            "field": "is_tautomer"
                                        },
                                        {
                                            "field": "is_parent"
                                        },
                                        {
                                            "field": "is_placeholder"
                                        }
                                    ],
                                    "includes": [
                                        {
                                            "relation": "properties"
                                        }
                                    ],
                                    "aggregates": [],
                                    "instructions": [],
                                    "gates": [
                                        "create",
                                        "update",
                                        "delete"
                                    ],
                                    "page": 1,
                                    "limit": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/molecules\/mutate": {
            "post": {
                "tags": [
                    "Molecules"
                ],
                "summary": "Perform a mutate request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "created": [
                                        1
                                    ],
                                    "updated": [
                                        2,
                                        3
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Create \/ Modify the database data with multiple options",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "mutate": [
                                    {
                                        "operation": "create",
                                        "attributes": {
                                            "standard_inchi": "",
                                            "standard_inchi_key": "",
                                            "canonical_smiles": "",
                                            "sugar_free_smiles": "",
                                            "identifier": "",
                                            "name": "",
                                            "cas": "",
                                            "iupac_name": "",
                                            "murko_framework": "",
                                            "structural_comments": "",
                                            "name_trust_level": "",
                                            "annotation_level": "",
                                            "variants_count": "",
                                            "status": "",
                                            "active": "",
                                            "has_variants": "",
                                            "has_stereo": "",
                                            "is_tautomer": "",
                                            "is_parent": "",
                                            "is_placeholder": ""
                                        },
                                        "relations": {
                                            "properties": {
                                                "operation": "update",
                                                "key": 1
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/molecules\/actions\/{action}": {
            "parameters": {
                "0": {
                    "name": "action",
                    "in": "path",
                    "description": "The action uriKey",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Molecules"
                ],
                "summary": "Perform an action request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "impacted": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Launch actions",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "filters": [
                                        {
                                            "field": "has_received_welcome_notification",
                                            "value": false
                                        }
                                    ]
                                },
                                "fields": [
                                    {
                                        "name": "expires_at",
                                        "value": "2023-04-29"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/collections": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "Get the resource detail",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "actions": [],
                                        "instructions": [],
                                        "scout_instructions": [],
                                        "fields": [
                                            "title",
                                            "description",
                                            "identifier",
                                            "url"
                                        ],
                                        "scout_fields": [],
                                        "limits": [
                                            10,
                                            25,
                                            50
                                        ],
                                        "scopes": [],
                                        "relations": [],
                                        "rules": {
                                            "all": [],
                                            "create": [],
                                            "update": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Get every detail about the resource according to the current user connected",
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Collections"
                ],
                "summary": "Perform a destroy request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "title": "Perspiciatis sed in corrupti error.",
                                        "description": "Consectetur soluta rem quis excepturi. Reprehenderit vel modi est omnis aliquam. Sed aliquam dolores sequi non non est. Nam non quidem molestiae aspernatur molestias quo autem.",
                                        "url": "http:\/\/www.sporer.com\/debitis-ipsam-nobis-labore",
                                        "identifier": "Quia officiis culpa et est dolorem rerum quod vel."
                                    },
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Delete database records using primary key",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "resources": [
                                    1,
                                    5,
                                    6
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/collections\/search": {
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Perform a search request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "title": "Quis libero et deleniti.",
                                        "description": "Et delectus soluta dolores aut rerum facere. Beatae eaque qui qui quisquam sint odit error. Laudantium est ut qui accusantium provident non.",
                                        "url": "https:\/\/kilback.com\/labore-ex-dolorem-sint-suscipit-doloremque-ad-nam.html",
                                        "identifier": "Esse perspiciatis sapiente dolores ipsam officia."
                                    },
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Crunch the Api's data with multiple attributes",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "scopes": [],
                                    "filters": [
                                        {
                                            "field": "title",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "description",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "identifier",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "url",
                                            "operator": "=",
                                            "value": ""
                                        }
                                    ],
                                    "sorts": [
                                        {
                                            "field": "title",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "description",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "identifier",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "url",
                                            "direction": "desc"
                                        }
                                    ],
                                    "selects": [
                                        {
                                            "field": "title"
                                        },
                                        {
                                            "field": "description"
                                        },
                                        {
                                            "field": "identifier"
                                        },
                                        {
                                            "field": "url"
                                        }
                                    ],
                                    "includes": [],
                                    "aggregates": [],
                                    "instructions": [],
                                    "gates": [
                                        "create",
                                        "update",
                                        "delete"
                                    ],
                                    "page": 1,
                                    "limit": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/collections\/mutate": {
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Perform a mutate request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "created": [
                                        1
                                    ],
                                    "updated": [
                                        2,
                                        3
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Create \/ Modify the database data with multiple options",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "mutate": [
                                    {
                                        "operation": "create",
                                        "attributes": {
                                            "title": "",
                                            "description": "",
                                            "identifier": "",
                                            "url": ""
                                        },
                                        "relations": []
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/collections\/actions\/{action}": {
            "parameters": {
                "0": {
                    "name": "action",
                    "in": "path",
                    "description": "The action uriKey",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Perform an action request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "impacted": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Launch actions",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "filters": [
                                        {
                                            "field": "has_received_welcome_notification",
                                            "value": false
                                        }
                                    ]
                                },
                                "fields": [
                                    {
                                        "name": "expires_at",
                                        "value": "2023-04-29"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/citations": {
            "get": {
                "tags": [
                    "Citations"
                ],
                "summary": "Get the resource detail",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "actions": [],
                                        "instructions": [],
                                        "scout_instructions": [],
                                        "fields": [
                                            "doi",
                                            "title",
                                            "authors",
                                            "citation_text"
                                        ],
                                        "scout_fields": [],
                                        "limits": [
                                            10,
                                            25,
                                            50
                                        ],
                                        "scopes": [],
                                        "relations": [],
                                        "rules": {
                                            "all": [],
                                            "create": [],
                                            "update": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Get every detail about the resource according to the current user connected",
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Citations"
                ],
                "summary": "Perform a destroy request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "doi": "10.1080\/14786419.2025.2498076~29",
                                        "title": "Neuroprotective activities of coixol: <i>in vitro<\/i> and <i>in silico<\/i> studies. ",
                                        "authors": "Amen Y, Othman A, Sayed AM, El-Damasy AK, Mira A.",
                                        "citation_text": ""
                                    },
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Delete database records using primary key",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "resources": [
                                    1,
                                    5,
                                    6
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/citations\/search": {
            "post": {
                "tags": [
                    "Citations"
                ],
                "summary": "Perform a search request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "doi": "10.1101\/2025.03.21.644653~62",
                                        "title": "AI-assisted isolation of bioactive Dipyrimicins from<i>Amycolatopsis azurea<\/i>and identification of its corresponding<i>dip<\/i>biosynthetic gene cluster",
                                        "authors": "Ancajas CMF, Shuster IE, Walker AS.",
                                        "citation_text": ""
                                    },
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Crunch the Api's data with multiple attributes",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "scopes": [],
                                    "filters": [
                                        {
                                            "field": "doi",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "title",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "authors",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "citation_text",
                                            "operator": "=",
                                            "value": ""
                                        }
                                    ],
                                    "sorts": [
                                        {
                                            "field": "doi",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "title",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "authors",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "citation_text",
                                            "direction": "desc"
                                        }
                                    ],
                                    "selects": [
                                        {
                                            "field": "doi"
                                        },
                                        {
                                            "field": "title"
                                        },
                                        {
                                            "field": "authors"
                                        },
                                        {
                                            "field": "citation_text"
                                        }
                                    ],
                                    "includes": [],
                                    "aggregates": [],
                                    "instructions": [],
                                    "gates": [
                                        "create",
                                        "update",
                                        "delete"
                                    ],
                                    "page": 1,
                                    "limit": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/citations\/mutate": {
            "post": {
                "tags": [
                    "Citations"
                ],
                "summary": "Perform a mutate request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "created": [
                                        1
                                    ],
                                    "updated": [
                                        2,
                                        3
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Create \/ Modify the database data with multiple options",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "mutate": [
                                    {
                                        "operation": "create",
                                        "attributes": {
                                            "doi": "",
                                            "title": "",
                                            "authors": "",
                                            "citation_text": ""
                                        },
                                        "relations": []
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/citations\/actions\/{action}": {
            "parameters": {
                "0": {
                    "name": "action",
                    "in": "path",
                    "description": "The action uriKey",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Citations"
                ],
                "summary": "Perform an action request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "impacted": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Launch actions",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "filters": [
                                        {
                                            "field": "has_received_welcome_notification",
                                            "value": false
                                        }
                                    ]
                                },
                                "fields": [
                                    {
                                        "name": "expires_at",
                                        "value": "2023-04-29"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/organisms": {
            "get": {
                "tags": [
                    "Organisms"
                ],
                "summary": "Get the resource detail",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "actions": [],
                                        "instructions": [],
                                        "scout_instructions": [],
                                        "fields": [
                                            "name",
                                            "iri",
                                            "rank",
                                            "molecule_count"
                                        ],
                                        "scout_fields": [],
                                        "limits": [
                                            10,
                                            25,
                                            50
                                        ],
                                        "scopes": [],
                                        "relations": [],
                                        "rules": {
                                            "all": [],
                                            "create": [],
                                            "update": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Get every detail about the resource according to the current user connected",
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Organisms"
                ],
                "summary": "Perform a destroy request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Delete database records using primary key",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "resources": [
                                    1,
                                    5,
                                    6
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/organisms\/search": {
            "post": {
                "tags": [
                    "Organisms"
                ],
                "summary": "Perform a search request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Crunch the Api's data with multiple attributes",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "scopes": [],
                                    "filters": [
                                        {
                                            "field": "name",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "iri",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "rank",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "molecule_count",
                                            "operator": "=",
                                            "value": ""
                                        }
                                    ],
                                    "sorts": [
                                        {
                                            "field": "name",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "iri",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "rank",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "molecule_count",
                                            "direction": "desc"
                                        }
                                    ],
                                    "selects": [
                                        {
                                            "field": "name"
                                        },
                                        {
                                            "field": "iri"
                                        },
                                        {
                                            "field": "rank"
                                        },
                                        {
                                            "field": "molecule_count"
                                        }
                                    ],
                                    "includes": [],
                                    "aggregates": [],
                                    "instructions": [],
                                    "gates": [
                                        "create",
                                        "update",
                                        "delete"
                                    ],
                                    "page": 1,
                                    "limit": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/organisms\/mutate": {
            "post": {
                "tags": [
                    "Organisms"
                ],
                "summary": "Perform a mutate request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "created": [
                                        1
                                    ],
                                    "updated": [
                                        2,
                                        3
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Create \/ Modify the database data with multiple options",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "mutate": [
                                    {
                                        "operation": "create",
                                        "attributes": {
                                            "name": "",
                                            "iri": "",
                                            "rank": "",
                                            "molecule_count": ""
                                        },
                                        "relations": []
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/organisms\/actions\/{action}": {
            "parameters": {
                "0": {
                    "name": "action",
                    "in": "path",
                    "description": "The action uriKey",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organisms"
                ],
                "summary": "Perform an action request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "impacted": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Launch actions",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "filters": [
                                        {
                                            "field": "has_received_welcome_notification",
                                            "value": false
                                        }
                                    ]
                                },
                                "fields": [
                                    {
                                        "name": "expires_at",
                                        "value": "2023-04-29"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the resource detail",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "actions": [],
                                        "instructions": [],
                                        "scout_instructions": [],
                                        "fields": [
                                            "name",
                                            "email"
                                        ],
                                        "scout_fields": [],
                                        "limits": [
                                            10,
                                            25,
                                            50
                                        ],
                                        "scopes": [],
                                        "relations": [],
                                        "rules": {
                                            "all": [],
                                            "create": [],
                                            "update": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Get every detail about the resource according to the current user connected",
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Perform a destroy request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "name": "Vella Ortiz",
                                        "email": "fchamplin@example.com"
                                    },
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Delete database records using primary key",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "resources": [
                                    1,
                                    5,
                                    6
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/users\/search": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Perform a search request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "name": "Abigayle O'Kon",
                                        "email": "nannie49@example.com"
                                    },
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Crunch the Api's data with multiple attributes",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "scopes": [],
                                    "filters": [
                                        {
                                            "field": "name",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "email",
                                            "operator": "=",
                                            "value": ""
                                        }
                                    ],
                                    "sorts": [
                                        {
                                            "field": "name",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "email",
                                            "direction": "desc"
                                        }
                                    ],
                                    "selects": [
                                        {
                                            "field": "name"
                                        },
                                        {
                                            "field": "email"
                                        }
                                    ],
                                    "includes": [],
                                    "aggregates": [],
                                    "instructions": [],
                                    "gates": [
                                        "create",
                                        "update",
                                        "delete"
                                    ],
                                    "page": 1,
                                    "limit": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/users\/mutate": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Perform a mutate request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "created": [
                                        1
                                    ],
                                    "updated": [
                                        2,
                                        3
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Create \/ Modify the database data with multiple options",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "mutate": [
                                    {
                                        "operation": "create",
                                        "attributes": {
                                            "name": "",
                                            "email": ""
                                        },
                                        "relations": []
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/users\/actions\/{action}": {
            "parameters": {
                "0": {
                    "name": "action",
                    "in": "path",
                    "description": "The action uriKey",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Perform an action request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "impacted": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Launch actions",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "filters": [
                                        {
                                            "field": "has_received_welcome_notification",
                                            "value": false
                                        }
                                    ]
                                },
                                "fields": [
                                    {
                                        "name": "expires_at",
                                        "value": "2023-04-29"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/properties": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get the resource detail",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "actions": [],
                                        "instructions": [],
                                        "scout_instructions": [],
                                        "fields": [
                                            "total_atom_count",
                                            "heavy_atom_count",
                                            "molecular_weight",
                                            "exact_molecular_weight",
                                            "molecular_formula",
                                            "alogp",
                                            "topological_polar_surface_area",
                                            "rotatable_bond_count",
                                            "hydrogen_bond_acceptors",
                                            "hydrogen_bond_donors",
                                            "hydrogen_bond_acceptors_lipinski",
                                            "hydrogen_bond_donors_lipinski",
                                            "lipinski_rule_of_five_violations",
                                            "aromatic_rings_count",
                                            "qed_drug_likeliness",
                                            "formal_charge",
                                            "fractioncsp3",
                                            "number_of_minimal_rings",
                                            "van_der_walls_volume",
                                            "contains_sugar",
                                            "contains_ring_sugars",
                                            "contains_linear_sugars",
                                            "murcko_framework",
                                            "np_likeness",
                                            "chemical_class",
                                            "chemical_sub_class",
                                            "chemical_super_class",
                                            "direct_parent_classification",
                                            "np_classifier_pathway",
                                            "np_classifier_superclass",
                                            "np_classifier_class",
                                            "np_classifier_is_glycoside"
                                        ],
                                        "scout_fields": [],
                                        "limits": [
                                            10,
                                            25,
                                            50
                                        ],
                                        "scopes": [],
                                        "relations": [
                                            {
                                                "resource": "App\\Rest\\Resources\\MoleculeResource",
                                                "relation": "molecule",
                                                "constraints": {
                                                    "required_on_creation": false,
                                                    "prohibited_on_creation": false,
                                                    "required_on_update": false,
                                                    "prohibited_on_update": false
                                                },
                                                "name": "HasOne"
                                            }
                                        ],
                                        "rules": {
                                            "all": [],
                                            "create": [],
                                            "update": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Get every detail about the resource according to the current user connected",
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Properties"
                ],
                "summary": "Perform a destroy request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Delete database records using primary key",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "resources": [
                                    1,
                                    5,
                                    6
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/properties\/search": {
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Perform a search request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Crunch the Api's data with multiple attributes",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "scopes": [],
                                    "filters": [
                                        {
                                            "field": "total_atom_count",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "heavy_atom_count",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "molecular_weight",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "exact_molecular_weight",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "molecular_formula",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "alogp",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "topological_polar_surface_area",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "rotatable_bond_count",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "hydrogen_bond_acceptors",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "hydrogen_bond_donors",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "hydrogen_bond_acceptors_lipinski",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "hydrogen_bond_donors_lipinski",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "lipinski_rule_of_five_violations",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "aromatic_rings_count",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "qed_drug_likeliness",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "formal_charge",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "fractioncsp3",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "number_of_minimal_rings",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "van_der_walls_volume",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "contains_sugar",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "contains_ring_sugars",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "contains_linear_sugars",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "murcko_framework",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "np_likeness",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "chemical_class",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "chemical_sub_class",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "chemical_super_class",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "direct_parent_classification",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "np_classifier_pathway",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "np_classifier_superclass",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "np_classifier_class",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "np_classifier_is_glycoside",
                                            "operator": "=",
                                            "value": ""
                                        }
                                    ],
                                    "sorts": [
                                        {
                                            "field": "total_atom_count",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "heavy_atom_count",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "molecular_weight",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "exact_molecular_weight",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "molecular_formula",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "alogp",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "topological_polar_surface_area",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "rotatable_bond_count",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "hydrogen_bond_acceptors",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "hydrogen_bond_donors",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "hydrogen_bond_acceptors_lipinski",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "hydrogen_bond_donors_lipinski",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "lipinski_rule_of_five_violations",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "aromatic_rings_count",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "qed_drug_likeliness",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "formal_charge",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "fractioncsp3",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "number_of_minimal_rings",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "van_der_walls_volume",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "contains_sugar",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "contains_ring_sugars",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "contains_linear_sugars",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "murcko_framework",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "np_likeness",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "chemical_class",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "chemical_sub_class",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "chemical_super_class",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "direct_parent_classification",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "np_classifier_pathway",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "np_classifier_superclass",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "np_classifier_class",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "np_classifier_is_glycoside",
                                            "direction": "desc"
                                        }
                                    ],
                                    "selects": [
                                        {
                                            "field": "total_atom_count"
                                        },
                                        {
                                            "field": "heavy_atom_count"
                                        },
                                        {
                                            "field": "molecular_weight"
                                        },
                                        {
                                            "field": "exact_molecular_weight"
                                        },
                                        {
                                            "field": "molecular_formula"
                                        },
                                        {
                                            "field": "alogp"
                                        },
                                        {
                                            "field": "topological_polar_surface_area"
                                        },
                                        {
                                            "field": "rotatable_bond_count"
                                        },
                                        {
                                            "field": "hydrogen_bond_acceptors"
                                        },
                                        {
                                            "field": "hydrogen_bond_donors"
                                        },
                                        {
                                            "field": "hydrogen_bond_acceptors_lipinski"
                                        },
                                        {
                                            "field": "hydrogen_bond_donors_lipinski"
                                        },
                                        {
                                            "field": "lipinski_rule_of_five_violations"
                                        },
                                        {
                                            "field": "aromatic_rings_count"
                                        },
                                        {
                                            "field": "qed_drug_likeliness"
                                        },
                                        {
                                            "field": "formal_charge"
                                        },
                                        {
                                            "field": "fractioncsp3"
                                        },
                                        {
                                            "field": "number_of_minimal_rings"
                                        },
                                        {
                                            "field": "van_der_walls_volume"
                                        },
                                        {
                                            "field": "contains_sugar"
                                        },
                                        {
                                            "field": "contains_ring_sugars"
                                        },
                                        {
                                            "field": "contains_linear_sugars"
                                        },
                                        {
                                            "field": "murcko_framework"
                                        },
                                        {
                                            "field": "np_likeness"
                                        },
                                        {
                                            "field": "chemical_class"
                                        },
                                        {
                                            "field": "chemical_sub_class"
                                        },
                                        {
                                            "field": "chemical_super_class"
                                        },
                                        {
                                            "field": "direct_parent_classification"
                                        },
                                        {
                                            "field": "np_classifier_pathway"
                                        },
                                        {
                                            "field": "np_classifier_superclass"
                                        },
                                        {
                                            "field": "np_classifier_class"
                                        },
                                        {
                                            "field": "np_classifier_is_glycoside"
                                        }
                                    ],
                                    "includes": [
                                        {
                                            "relation": "molecule"
                                        }
                                    ],
                                    "aggregates": [],
                                    "instructions": [],
                                    "gates": [
                                        "create",
                                        "update",
                                        "delete"
                                    ],
                                    "page": 1,
                                    "limit": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/properties\/mutate": {
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Perform a mutate request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "created": [
                                        1
                                    ],
                                    "updated": [
                                        2,
                                        3
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Create \/ Modify the database data with multiple options",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "mutate": [
                                    {
                                        "operation": "create",
                                        "attributes": {
                                            "total_atom_count": "",
                                            "heavy_atom_count": "",
                                            "molecular_weight": "",
                                            "exact_molecular_weight": "",
                                            "molecular_formula": "",
                                            "alogp": "",
                                            "topological_polar_surface_area": "",
                                            "rotatable_bond_count": "",
                                            "hydrogen_bond_acceptors": "",
                                            "hydrogen_bond_donors": "",
                                            "hydrogen_bond_acceptors_lipinski": "",
                                            "hydrogen_bond_donors_lipinski": "",
                                            "lipinski_rule_of_five_violations": "",
                                            "aromatic_rings_count": "",
                                            "qed_drug_likeliness": "",
                                            "formal_charge": "",
                                            "fractioncsp3": "",
                                            "number_of_minimal_rings": "",
                                            "van_der_walls_volume": "",
                                            "contains_sugar": "",
                                            "contains_ring_sugars": "",
                                            "contains_linear_sugars": "",
                                            "murcko_framework": "",
                                            "np_likeness": "",
                                            "chemical_class": "",
                                            "chemical_sub_class": "",
                                            "chemical_super_class": "",
                                            "direct_parent_classification": "",
                                            "np_classifier_pathway": "",
                                            "np_classifier_superclass": "",
                                            "np_classifier_class": "",
                                            "np_classifier_is_glycoside": ""
                                        },
                                        "relations": {
                                            "molecule": {
                                                "operation": "update",
                                                "key": 1
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/properties\/actions\/{action}": {
            "parameters": {
                "0": {
                    "name": "action",
                    "in": "path",
                    "description": "The action uriKey",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Perform an action request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "impacted": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Launch actions",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "filters": [
                                        {
                                            "field": "has_received_welcome_notification",
                                            "value": false
                                        }
                                    ]
                                },
                                "fields": [
                                    {
                                        "name": "expires_at",
                                        "value": "2023-04-29"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get the resource detail",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "actions": [],
                                        "instructions": [],
                                        "scout_instructions": [],
                                        "fields": [
                                            "title",
                                            "evidence",
                                            "doi",
                                            "comment",
                                            "suggested_changes"
                                        ],
                                        "scout_fields": [],
                                        "limits": [
                                            10,
                                            25,
                                            50
                                        ],
                                        "scopes": [],
                                        "relations": [],
                                        "rules": {
                                            "all": {
                                                "title": "required"
                                            },
                                            "create": [],
                                            "update": []
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Get every detail about the resource according to the current user connected",
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Perform a destroy request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Delete database records using primary key",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "resources": [
                                    1,
                                    5,
                                    6
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/reports\/search": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Perform a search request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [],
                                    "meta": []
                                }
                            }
                        }
                    }
                },
                "description": "Crunch the Api's data with multiple attributes",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "scopes": [],
                                    "filters": [
                                        {
                                            "field": "title",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "evidence",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "doi",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "comment",
                                            "operator": "=",
                                            "value": ""
                                        },
                                        {
                                            "field": "suggested_changes",
                                            "operator": "=",
                                            "value": ""
                                        }
                                    ],
                                    "sorts": [
                                        {
                                            "field": "title",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "evidence",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "doi",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "comment",
                                            "direction": "desc"
                                        },
                                        {
                                            "field": "suggested_changes",
                                            "direction": "desc"
                                        }
                                    ],
                                    "selects": [
                                        {
                                            "field": "title"
                                        },
                                        {
                                            "field": "evidence"
                                        },
                                        {
                                            "field": "doi"
                                        },
                                        {
                                            "field": "comment"
                                        },
                                        {
                                            "field": "suggested_changes"
                                        }
                                    ],
                                    "includes": [],
                                    "aggregates": [],
                                    "instructions": [],
                                    "gates": [
                                        "create",
                                        "update",
                                        "delete"
                                    ],
                                    "page": 1,
                                    "limit": 10
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/reports\/mutate": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Perform a mutate request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "created": [
                                        1
                                    ],
                                    "updated": [
                                        2,
                                        3
                                    ]
                                }
                            }
                        }
                    }
                },
                "description": "Create \/ Modify the database data with multiple options",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "mutate": [
                                    {
                                        "operation": "create",
                                        "attributes": {
                                            "title": "",
                                            "evidence": "",
                                            "doi": "",
                                            "comment": "",
                                            "suggested_changes": ""
                                        },
                                        "relations": []
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/reports\/actions\/{action}": {
            "parameters": {
                "0": {
                    "name": "action",
                    "in": "path",
                    "description": "The action uriKey",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Perform an action request",
                "responses": {
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": {
                                        "impacted": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Launch actions",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "search": {
                                    "filters": [
                                        {
                                            "field": "has_received_welcome_notification",
                                            "value": false
                                        }
                                    ]
                                },
                                "fields": [
                                    {
                                        "name": "expires_at",
                                        "value": "2023-04-29"
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/auth\/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login endpoint",
                "responses": {
                    "default": {
                        "description": "Login successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "email": "john@example.com",
                                "password": "password"
                            }
                        }
                    }
                }
            }
        },
        "\/api\/auth\/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout endpoint",
                "responses": {
                    "default": {
                        "description": "Logout successful",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "logout": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "\/api\/auth\/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register endpoint",
                "responses": {
                    "default": {
                        "description": "Successfully created user",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "first_name": "John",
                                "last_name": "Doe",
                                "username": "JDoe",
                                "affiliation": "JD",
                                "email": "john@example.com",
                                "password": "password",
                                "password_confirmation": "password"
                            }
                        }
                    }
                }
            }
        },
        "\/api\/search": {
            "parameters": {
                "0": {
                    "name": "query",
                    "in": "query",
                    "description": "Search query string",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                "1": {
                    "name": "sort",
                    "in": "query",
                    "description": "Sorting option",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                "2": {
                    "name": "type",
                    "in": "query",
                    "description": "Type filter",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                "3": {
                    "name": "tagType",
                    "in": "query",
                    "description": "Tag type filter",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                "4": {
                    "name": "page",
                    "in": "query",
                    "description": "Page number for pagination",
                    "required": false,
                    "schema": {
                        "type": "integer"
                    }
                },
                "5": {
                    "name": "limit",
                    "in": "query",
                    "description": "Number of results per page",
                    "required": false,
                    "schema": {
                        "type": "integer"
                    }
                },
                "6": {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset for pagination",
                    "required": false,
                    "schema": {
                        "type": "integer"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Advanced Molecule Search",
                "responses": {
                    "default": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "data": [
                                        {
                                            "identifier": "CNP0228556.0",
                                            "canonical_smiles": "CN1C(=O)C2=C(N=CN2C)N(C)C1=O",
                                            "annotation_level": 5,
                                            "name": "caffeine",
                                            "iupac_name": "1,3,7-trimethylpurine-2,6-dione",
                                            "organism_count": 135,
                                            "citation_count": 12,
                                            "geo_count": 3,
                                            "collection_count": 31
                                        }
                                    ],
                                    "current_page": 1,
                                    "total": 100,
                                    "per_page": 24
                                }
                            }
                        }
                    },
                    "\"500\"": {
                        "description": "Server Error",
                        "content": {
                            "application\/json": {
                                "example": {
                                    "message": "An error occurred during the search operation."
                                }
                            }
                        }
                    }
                },
                "description": "# Advanced Molecule Search\n\nAdvanced search supports searching for molecules based on complex criteria.\n\n## 1. Tag-Based Search (type=tags)\nSearch molecules based on the following tag types:\n\n* **dataSource**: Search by collection title\n  - Example: `type=tags, tagType=dataSource, query=collection_name`\n\n* **organisms**: Search by organism names (comma-separated)\n  - Example: `type=tags, tagType=organisms, query=organism_name1,organism_name2`\n\n* **citations**: Search by DOI or title (comma-separated)\n  - Example: `type=tags, tagType=citations, query=doi1,doi2,title1,title2`\n\n## 2. Filter-Based Search (type=filters)\n\n### Molecular Properties\n* `tac`: Total Atom Count (1-1071)\n* `hac`: Heavy Atom Count (0-551)\n* `mw`: Molecular Weight (5.01-7860.71)\n* `emw`: Exact Molecular Weight (1.00728-7855.66038)\n* `mrc`: Number of Minimal Rings (0-51)\n* `vdwv`: Van der Walls Volume (10.14-5177.31)\n* `fc`: Formal Charge (-8 to 7)\n\n### Chemical Properties\n* `alogp`: ALogP (-82.67 to 67.03)\n* `topopsa`: Topological Polar Surface Area (0.00-3453.72)\n* `fcsp3`: Fraction CSP3 (0.00-1.00)\n* `np`: NP Likeness (-3.53 to 4.12)\n* `qed`: QED Drug Likeliness (0.00-0.95)\n\n### Structural Features\n* `rbc`: Rotatable Bond Count (0-224)\n* `arc`: Aromatic Rings Count (0-31)\n* `hba`: Hydrogen Bond Acceptors (0-191)\n* `hbd`: Hydrogen Bond Donors (0-116)\n\n### Lipinski Parameters\n* `lhba`: Lipinski H-Bond Acceptors (0-191)\n* `lhbd`: Lipinski H-Bond Donors (0-116)\n* `lro5v`: Lipinski Rule of 5 Violations (0-4)\n\n### Sugar-Related Properties\n* `cs`: Contains Sugar (true\/false)\n* `crs`: Contains Ring Sugars (true\/false)\n* `cls`: Contains Linear Sugars (true\/false)\n\n### Classyfire Classifications\n* `class`: Chemical Class\n  - Example: 1,2-diaryl-2-propen-1-ols\n* `subclass`: Chemical Sub Class\n  - Example: 1,1'-azonaphthalenes\n* `superclass`: Chemical Super Class\n  - Example: Acetylides\n* `parent`: Direct Parent Classification\n  - Example: 1,1'-azonaphthalenes\n\n### Natural Product Classifications\n* `np_pathway`: NP Classifier Pathway\n  - Example: Amino acids and Peptides\n* `np_superclass`: NP Classifier Superclass\n  - Example: Aminosugars and aminoglycosides\n* `np_class`: NP Classifier Class\n  - Example: 2-arylbenzofurans\n* `np_glycoside`: NP Classifier Is Glycoside (true\/false)\n\n### Filter Query Examples\n* Range query:\n  ```\n  type=filters&q=tac:4..6\n  ```\n* Boolean query:\n  ```\n  type=filters&q=cs:true\n  ```\n* Classification query:\n  ```\n  type=filters&q=class:1,2-diaryl-2-propen-1-ols\n  ```\n* Multiple conditions:\n  ```\n  type=filters&q=tac:4..6 mw:100..200\n  ```\n* Complex query with OR:\n  ```\n  type=filters&q=tac:4..6 cs:true OR mw:100..200\n  ```\n\n## 3. Basic Search (type not specified)\nSearch molecules by name, SMILES, InChI, or InChI Key.\n\n* Simply provide the search term in the query parameter\n* Example: `query=caffeine`\n",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "example": {
                                "type": "filters",
                                "tagType": "",
                                "query": "tac:4..6",
                                "limit": 20,
                                "sort": "desc",
                                "page": 1,
                                "offset": 0
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "servers": [
        {
            "url": "\/",
            "description": "The current server"
        }
    ],
    "security": [],
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "scheme": "Bearer",
                "description": "Enter token in format (Bearer \\<token\\>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}